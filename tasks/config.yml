---

- set_fact:
    name: automysqlbackup
    conf:
      file: /etc/default/automysqlbackup
      vars:
        backupdir:
          old: BACKUPDIR="/var/lib/automysqlbackup"
          new: |-
            {{ 'BACKUPDIR="' + backupdir + '"' }}
        latest:
          old: LATEST=no
          new: LATEST=yes
        mailcontent:
          old: MAILCONTENT="quiet"
          new: MAILCONTENT="log"
        postbackup:
          old: '#POSTBACKUP="/etc/mysql-backup-post"'
          new: POSTBACKUP="/usr/local/bin/mysql-backup-post"
        create_database:
          old: CREATE_DATABASE=yes
          new: CREATE_DATABASE=no

- stat: { path: '{{ conf.file }}' }
  register: st

- hg_commit: { cwd: /etc, com: 'Before configuring {{ name }}', user: '{{ user_email }}' }


- name: Conf comment out orig value loop
  with_dict: '{{ conf.vars }}'
  loop_control: { label: '{{ item.key }}' }
  when: st.stat.exists

  replace:
    dest: '{{ conf.file }}'
    regexp: |-
      {{ "^" + item.value.old + "$" }}
    replace: '#\g<0>'


- name: Conf setup new value loop
  with_dict: '{{ conf.vars }}'
  loop_control: { label: '{{ item.key }}' }
  when: st.stat.exists

  lineinfile:
    dest: '{{ conf.file }}'
    line: '{{ item.value.new }}'
    insertafter: |-
      {{ "^#" + item.value.old + "$" }}


- name: Add mysql-backup-post
  template:
    src: mysql-backup-post.j2
    dest: /usr/local/bin/mysql-backup-post
    mode: 0755

- hg_commit: { cwd: /etc, com: 'After configuring {{ name }}', user: '{{ user_email }}' }
